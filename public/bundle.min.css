@font-face {
  font-family: "PT Sans";
  font-weight: 400;
  font-style: normal;
  src: local("PT Sans Regular"), url("../../public/fonts/ptsans.woff") format("woff"), url("../../public/fonts/ptsans.woff2") format("woff2"); }

@font-face {
  font-family: "PT Sans";
  font-weight: 700;
  font-style: normal;
  src: local("PT Sans Bold"), url("../../public/fonts/ptsansbold.woff") format("woff"), url("../../public/fonts/ptsansbold.woff2") format("woff2"); }

@import url("https://fonts.googleapis.com/css?family=Roboto");
html {
  font-size: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

*,
*::after,
*::before {
  box-sizing: border-box; }

.clearfix::after {
  content: "";
  display: table;
  clear: both; }

h1, h2, h3, h4, h5, h6, p {
  padding: 0;
  margin: 0; }

a {
  color: #fff;
  text-decoration: none;
  outline: 0; }
  a:active, a:focus, a:hover {
    color: #fff;
    text-decoration: none;
    outline: 0; }

.wrap {
  background: #ddd;
  font-family: "Open Sans", sans-serif, "Roboto";
  color: #fff;
  margin: 0;
  padding: 0; }

.wrapper {
  background-color: #fff;
  max-width: 1680px;
  min-height: 320px;
  margin: 0 auto;
  padding-top: 60px;
  box-shadow: 0, 2px, 5px, #555; }

.requirements {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  margin: 10px auto;
  width: 60%;
  height: 200px;
  outline: 1px solid black; }

.main {
  margin: 10px 0 10px 0;
  width: 100%;
  outline: 1px solid black;
  height: auto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center; }

.main-footer {
  margin: 10px 0 0 0;
  outline: 1px solid black;
  height: 100px;
  background: #ccc; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.about {
  background: blue;
  outline: 1px solid black;
  width: 97%;
  margin: 5px;
  height: 700px; }
  .about__article {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    text-align: center;
    font-size: 18rem; }

@media screen and (max-width: 992px) {
  .about__article {
    font-size: 1.8rem; } }

.contacts {
  background: green;
  outline: 1px solid black;
  width: 97%;
  margin: 5px;
  height: 700px; }
  .contacts__article {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    font-size: 18rem; }

@media screen and (max-width: 992px) {
  .contacts__article {
    font-size: 1.8rem; } }

.logo-top__wrap {
  display: block; }

.logo-top__img {
  display: block;
  cursor: pointer;
  width: 30px; }

@media screen and (max-width: 480px) {
  .logo-top {
    -ms-flex: 0 1 80%;
        flex: 0 1 80%; } }


.main-header {
  background-color: rgba(0, 0, 0, 0.8);
  padding: 0;
  width: 100%;
  height: 60px;
  position: fixed;
  top: 0;
  z-index: 100;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
      flex-flow: row nowrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-line-pack: stretch;
      align-content: stretch; }

@media screen and (max-width: 992px) {
  height: 70px; }

.map {
  background: yellow;
  outline: 1px solid black;
  height: 700px;
  width: 97%;
  margin: 5px; }
  .map__article {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    text-align: center;
    font-size: 18rem; }

@media screen and (max-width: 992px) {
  .map__article {
    font-size: 1.8rem; } }

/* Medium Devices, Desktops */
@media screen and (max-width: 992px) {
  .wrapper {
    width: 100%;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
  .nav-main {
    display: none; }
  .requirements {
    width: 100%; }
  .s-chords__left {
    background: red; } }

.section {
  display: none; }

.menu-btn span,
.menu-btn span::before,
.menu-btn span::after {
  position: absolute;
  z-index: 100;
  width: 20px;
  height: 2px;
  background: #777;
  left: 50%;
  top: 50%;
  margin-left: -10px;
  margin-top: -1px; }

.menu-btn span::before,
.menu-btn span::after {
  content: " ";
  display: block;
  transition: 0.2s; }

.menu-btn span::before {
  transform: translateY(-5px); }

.menu-btn span::after {
  transform: translateY(5px); }

.menu-btn {
  display: none;
  margin: 15px 10px;
  z-index: 100;
  width: 40px;
  height: 30px;
  background-color: #fff;
  border-radius: 50%;
  position: relative; }

@media screen and (max-width: 992px) {
  .menu-btn {
    display: block; }
  .section {
    z-index: 300;
    background: #fff;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    right: 10px;
    border-radius: 50%; } }

.nav-main--hidden {
  display: none;
  background-color: rgba(0, 0, 0, 0.8);
  width: 100%;
  height: 100%;
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0; }

.nav-main__list {
  margin: 0;
  padding: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.nav-main__item {
  display: inline-block; }

.nav-main__link {
  display: inline-block;
  margin: 0 10px;
  text-transform: uppercase; }
  .nav-main__link:hover {
    color: #4a4c3b; }

.phone {
  font-size: 1.3rem; }

.portfolio {
  background: darkred;
  outline: 1px solid black;
  width: 97%;
  margin: 5px;
  height: 700px; }
  .portfolio__article {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    text-align: center;
    font-size: 18rem; }

@media screen and (max-width: 992px) {
  .portfolio__article {
    font-size: 1.8rem; } }

.sun {
  background: #a714b7;
  outline: 1px solid black;
  width: 97%;
  margin: 5px;
  height: 700px; }
  .sun__article {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    text-align: center;
    font-size: 18rem; }

@media screen and (max-width: 992px) {
  .sun__article {
    font-size: 1.8rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
