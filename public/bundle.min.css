@font-face {
  font-family: "PT Sans";
  font-weight: 400;
  font-style: normal;
  src: local("PT Sans Regular"), url("../../public/fonts/ptsans.woff") format("woff"), url("../../public/fonts/ptsans.woff2") format("woff2"); }

@font-face {
  font-family: "PT Sans";
  font-weight: 700;
  font-style: normal;
  src: local("PT Sans Bold"), url("../../public/fonts/ptsansbold.woff") format("woff"), url("../../public/fonts/ptsansbold.woff2") format("woff2"); }

@import url("https://fonts.googleapis.com/css?family=Roboto");
*,
*::after,
*::before {
  box-sizing: border-box; }

.clearfix::after {
  content: "";
  display: table;
  clear: both; }

html, body, div, span, applet, main, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%; }

article, aside, details, main, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

table {
  border-collapse: collapse;
  border-width: 0px;
  padding: 0px;
  margin: 0px; }

html {
  height: 100%;
  -webkit-text-size-adjust: none;
  -ms-text-size-adjust: none; }

input, textarea {
  color: #333;
  outline: none;
  border-radius: 0;
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  -webkit-appearance: none; }

input[type="button"], input[type="submit"] {
  cursor: pointer; }

button {
  cursor: pointer; }

td {
  margin: 0px;
  padding: 0px; }

form {
  padding: 0px;
  margin: 0px; }

input[type=submit], input[type=button] {
  -webkit-appearance: none;
  outline: none; }

button {
  -webkit-appearance: none;
  outline: none; }

* {
  box-sizing: border-box; }

*:before, *:after {
  box-sizing: border-box; }

a {
  color: #fff;
  text-decoration: none;
  outline: 0; }
  a:active, a:focus, a:hover {
    color: #fff;
    text-decoration: none;
    outline: 0; }

/*  MAIN STYLES */
.wrapper {
  margin: 0;
  padding: 0;
  height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #ddd;
  font-family: "Open Sans", sans-serif;
  color: #333;
  line-height: 1.6;
  top: 20%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center; }

.wrap-site {
  background-color: #fff;
  max-width: 1280px;
  min-width: 320px;
  margin: 0 auto;
  box-shadow: 0, 2px, 5px, #555; }

.requirements {
  top: 26%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  margin: 10px auto;
  width: 60%;
  height: 200px; }

.main {
  margin: 10px auto;
  height: auto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center; }

.main-footer {
  margin: 10px 0 0 0;
  height: 100px;
  background: #ccc; }

@media only screen and (max-width: 992px) {
  .main {
    width: 100%; } }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

ul, li {
  display: block;
  padding: 0;
  margin: 0; }

.club {
  width: 100%;
  margin-top: 10px;
  height: auto;
  padding: 40px 5px;
  background: #eeeeee;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  color: #2A4C3B; }

@media only screen and (max-width: 992px) {
  .club {
    width: 100%; } }

.contacts {
  width: 100%;
  height: 700px;
  padding: 50px;
  background: red;
  margin-top: 10px; }

.feature {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-align: center;
      align-items: center;
  height: 100%;
  width: 95%;
  margin: 20px 0; }
  .feature__wrap {
    width: 25%;
    height: auto; }
  .feature__icon {
    padding-right: 3px; }
  .feature__title {
    text-align: center;
    font-size: 1.2rem; }

@media only screen and (max-width: 992px) {
  .feature {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
  __wrap {
    margin: 0; } }

.hidden-menu {
  display: none;
  background-color: rgba(0, 0, 0, 0.8);
  width: 100%;
  height: 100%;
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0;
  -ms-flex-flow: column nowrap;
      flex-flow: column nowrap;
  text-align: center; }
  .hidden-menu__list {
    margin: 0;
    padding: 0;
    height: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: column nowrap;
        flex-flow: column nowrap;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: stretch;
        align-items: stretch;
    -ms-flex-line-pack: stretch;
        align-content: stretch; }
  .hidden-menu__item a {
    margin: 15px auto;
    display: block;
    color: #fff;
    font-size: 2.3rem; }
  .hidden-menu__item a:hover {
    color: green; }

@media only screen and (max-width: 992px) {
  .hidden-menu {
    display: block; } }

.map {
  width: 100%;
  height: 700px;
  padding: 50px;
  background: blue;
  margin-top: 10px; }

.menu-btn {
  display: none;
  text-align: center;
  width: 60px;
  height: 60px;
  line-height: 60px;
  background-color: #fff;
  color: #ccc;
  cursor: pointer;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 999;
  font-size: 2.1rem;
  transition: all 0.35s ease 0s; }
  .menu-btn:hover {
    color: #2A4C3B; }

@media only screen and (max-width: 992px) {
  .menu-btn {
    display: block; } }

.portfolio {
  width: 100%;
  height: 700px;
  padding: 50px;
  background: green;
  margin-top: 10px; }

.site-header {
  background-color: rgba(0, 0, 0, 0.8);
  padding: 0;
  max-width: 1680px;
  width: 100%;
  height: 60px;
  position: fixed;
  top: 0;
  z-index: 100;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
      flex-flow: row nowrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-line-pack: stretch;
      align-content: stretch; }

.title {
  width: 90%;
  padding-top: 100px;
  padding-bottom: 70px; }
  .title__main {
    font-size: 1.9rem;
    text-align: center; }
  .title__text {
    font-size: 1.6rem;
    text-align: center; }

@media only screen and (max-width: 992px) {
  .title {
    width: 100%;
    padding: 50px 15px 015px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
    .title__main {
      font-size: 1.5rem; }
    .title__text {
      font-size: 1.3rem; } }

.top-menu__list {
  margin: 0;
  padding: 0; }

.top-menu__item {
  display: inline-block; }

.top-menu__item a {
  display: inline-block;
  margin: 0 10px;
  text-transform: uppercase;
  color: #ccc; }
  .top-menu__item a a:hover {
    color: #2A4C3B; }

@media only screen and (max-width: 992px) {
  .top-menu {
    display: none; } }

.top-phone {
  font-size: 1.7rem;
  color: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
